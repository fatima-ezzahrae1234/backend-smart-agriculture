"""Add date_creation to parcelle_notes

Revision ID: 67954ee9dfb6
Revises: 
Create Date: 2025-06-06 14:25:46.304877

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '67954ee9dfb6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_image_predictions_filename'), table_name='image_predictions')
    op.drop_index(op.f('ix_image_predictions_id'), table_name='image_predictions')
    op.drop_table('image_predictions')
    op.drop_index(op.f('ix_parcelle_notes_id'), table_name='parcelle_notes')
    op.drop_table('parcelle_notes')
    op.drop_index(op.f('ix_crop_recommendations_id'), table_name='crop_recommendations')
    op.drop_table('crop_recommendations')
    op.drop_index(op.f('ix_irrigation_records_culture'), table_name='irrigation_records')
    op.drop_index(op.f('ix_irrigation_records_id'), table_name='irrigation_records')
    op.drop_table('irrigation_records')
    op.drop_index(op.f('ix_chatbot_interactions_id'), table_name='chatbot_interactions')
    op.drop_table('chatbot_interactions')
    op.drop_index(op.f('ix_utilisateurs_email'), table_name='utilisateurs')
    op.drop_index(op.f('ix_utilisateurs_id'), table_name='utilisateurs')
    op.drop_table('utilisateurs')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('utilisateurs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('nom', sa.VARCHAR(), nullable=False),
    sa.Column('prenom', sa.VARCHAR(), nullable=False),
    sa.Column('adresse', sa.VARCHAR(), nullable=False),
    sa.Column('tel', sa.VARCHAR(length=20), nullable=False),
    sa.Column('email', sa.VARCHAR(), nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), nullable=False),
    sa.Column('image', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_utilisateurs_id'), 'utilisateurs', ['id'], unique=False)
    op.create_index(op.f('ix_utilisateurs_email'), 'utilisateurs', ['email'], unique=1)
    op.create_table('chatbot_interactions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('input_type', sa.VARCHAR(), nullable=True),
    sa.Column('user_input', sa.VARCHAR(), nullable=True),
    sa.Column('bot_response', sa.VARCHAR(), nullable=True),
    sa.Column('audio_filename', sa.VARCHAR(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chatbot_interactions_id'), 'chatbot_interactions', ['id'], unique=False)
    op.create_table('irrigation_records',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('culture', sa.VARCHAR(), nullable=True),
    sa.Column('type_sol', sa.VARCHAR(), nullable=True),
    sa.Column('saison', sa.VARCHAR(), nullable=True),
    sa.Column('type_irrigation', sa.VARCHAR(), nullable=True),
    sa.Column('frequence_irrigation', sa.INTEGER(), nullable=True),
    sa.Column('besoin_brut', sa.FLOAT(), nullable=True),
    sa.Column('besoin_par_seance', sa.FLOAT(), nullable=True),
    sa.Column('irrigation_necessaire', sa.BOOLEAN(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_irrigation_records_id'), 'irrigation_records', ['id'], unique=False)
    op.create_index(op.f('ix_irrigation_records_culture'), 'irrigation_records', ['culture'], unique=False)
    op.create_table('crop_recommendations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('N', sa.FLOAT(), nullable=True),
    sa.Column('P', sa.FLOAT(), nullable=True),
    sa.Column('K', sa.FLOAT(), nullable=True),
    sa.Column('temperature', sa.FLOAT(), nullable=True),
    sa.Column('humidity', sa.FLOAT(), nullable=True),
    sa.Column('ph', sa.FLOAT(), nullable=True),
    sa.Column('rainfall', sa.FLOAT(), nullable=True),
    sa.Column('recommended_crop', sa.VARCHAR(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('plant', sa.VARCHAR(), nullable=True),
    sa.Column('disease', sa.VARCHAR(), nullable=True),
    sa.Column('recommended_matiere', sa.VARCHAR(), nullable=True),
    sa.Column('critere_gravite', sa.VARCHAR(), nullable=True),
    sa.Column('critere_stade', sa.VARCHAR(), nullable=True),
    sa.Column('critere_dar', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_crop_recommendations_id'), 'crop_recommendations', ['id'], unique=False)
    op.create_table('parcelle_notes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('image_url', sa.VARCHAR(), nullable=True),
    sa.Column('nom_ferme', sa.VARCHAR(), nullable=False),
    sa.Column('numero_parcelle', sa.VARCHAR(), nullable=False),
    sa.Column('superficie', sa.FLOAT(), nullable=False),
    sa.Column('type_sol', sa.VARCHAR(), nullable=False),
    sa.Column('culture', sa.VARCHAR(), nullable=False),
    sa.Column('date_semis', sa.VARCHAR(), nullable=False),
    sa.Column('quantite_semence', sa.FLOAT(), nullable=False),
    sa.Column('systeme_irrigation', sa.VARCHAR(), nullable=False),
    sa.Column('suivi_culture', sa.TEXT(), nullable=False),
    sa.Column('date_recolte', sa.VARCHAR(), nullable=False),
    sa.Column('nombre_travailleurs', sa.INTEGER(), nullable=False),
    sa.Column('depenses', sa.FLOAT(), nullable=False),
    sa.Column('rendement', sa.FLOAT(), nullable=False),
    sa.Column('autres_infos', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_parcelle_notes_id'), 'parcelle_notes', ['id'], unique=False)
    op.create_table('image_predictions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('filename', sa.VARCHAR(), nullable=True),
    sa.Column('prediction', sa.VARCHAR(), nullable=True),
    sa.Column('file_path', sa.VARCHAR(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('plant', sa.VARCHAR(), nullable=True),
    sa.Column('disease', sa.VARCHAR(), nullable=True),
    sa.Column('recommended_matiere', sa.VARCHAR(), nullable=True),
    sa.Column('critere_gravite', sa.VARCHAR(), nullable=True),
    sa.Column('critere_stade', sa.VARCHAR(), nullable=True),
    sa.Column('critere_dar', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_image_predictions_id'), 'image_predictions', ['id'], unique=False)
    op.create_index(op.f('ix_image_predictions_filename'), 'image_predictions', ['filename'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('title', sa.VARCHAR(), nullable=True),
    sa.Column('message', sa.VARCHAR(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['utilisateurs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    # ### end Alembic commands ###
